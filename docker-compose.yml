version: "3.8"

services:
  dns:
    image: strm/dnsmasq
    ports:
      - "53:53/udp"
      - "53:53/tcp"
    cap_add:
      - NET_ADMIN
    env_file: .env
    command: [
      "--log-queries",
      "--log-facility=-",
      "--address=/$EXTERNAL_HOST/192.168.0.114"
    ]

  web:
    profiles:
      - deploy
    build:
      context: "./nginx"
    env_file: .env
    ports:
      - "80:80"

  web-dev:
    extends:
      service: web
    profiles:
      - dev
    depends_on:
      - frontend-dev
      - backend-dev
    develop:
      watch:
        - action: sync+restart
          path: ./nginx/templates
          target: /etc/nginx/templates
    environment:
      - FRONTEND_HOST=frontend-dev
      - FRONTEND_PORT=$DEV_FRONTEND_PORT
      - BACKEND_HOST=backend-dev
      - BACKEND_PORT=$DEV_BACKEND_PORT
      - BACKEND_STATIC_HOST=backend-dev
      - BACKEND_STATIC_PORT=$DEV_BACKEND_PORT
      - BACKEND_HMR_PATH=$DEV_FRONTEND_HMR_PATH
    ports:
      - "80:80"
      - "443:443"

  backend:
    profiles:
      - deploy
    build: "./backend"

  backend-dev:
    profiles:
      - dev
    extends:
      service: backend
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app/school
        - action: rebuild
          path: requirements.txt
    entrypoint: "python manage.py runserver 0.0.0.0:${DEV_BACKEND_PORT}"

  frontend:
    profiles:
      - deploy
    build:
      context: "./frontend"
      target: "dev"

  frontend-dev:
    profiles:
      - dev
    build:
      context: "./frontend"
      target: "prerelease"
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /usr/src/app
          ignore:
            - /frontend/node_modules/
        - action: rebuild
          path: package.json
    environment:
      - FRONTEND_PORT=$DEV_FRONTEND_PORT
      - HMR_PATH=$DEV_FRONTEND_HMR_PATH
    entrypoint: "bun run dev"
